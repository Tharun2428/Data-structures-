#include <stdio.h>
#include <stdlib.h>

#define MAX 100

int adj[MAX][MAX];
int visited[MAX];
int queue[MAX], front = -1, rear = -1;

void bfs(int start, int n) {
    int i;
    front = rear = 0;
    queue[rear] = start;
    visited[start] = 1;
    
    while (front <= rear) {
        start = queue[front++];
        printf("%d ", start);
        
        for (i = 1; i <= n; i++) {
            if (adj[start][i] && !visited[i]) {
                queue[++rear] = i;
                visited[i] = 1;
            }
        }
    }
}

void dfs(int start, int n) {
    int i;
    printf("%d ", start);
    visited[start] = 1;
    
    for (i = 1; i <= n; i++) {
        if (adj[start][i] && !visited[i]) {
            dfs(i, n);
        }
    }
}

int main() {
    int n, i, j, start;
    
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    
    printf("Enter adjacency matrix:\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &adj[i][j]);
        }
    }
    
    printf("Enter starting vertex: ");
    scanf("%d", &start);
    
    printf("BFS traversal: ");
    for (i = 1; i <= n; i++) visited[i] = 0;
    bfs(start, n);
    
    printf("\nDFS traversal: ");
    for (i = 1; i <= n; i++) visited[i] = 0;
    dfs(start, n);
    
    return 0;
}
